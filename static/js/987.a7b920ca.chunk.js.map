{"version":3,"file":"static/js/987.a7b920ca.chunk.js","mappings":"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","sources":["components/phonebookComponents/components/filter/FilterField.styled.js","components/phonebookComponents/components/form/Form.styled.js","components/phonebookComponents/components/form/Form.jsx","components/phonebookComponents/components/filter/FilterField.jsx","components/phonebookComponents/components/contacts/ContactEl.styled.js","components/phonebookComponents/components/contacts/ContactEl.jsx","components/phonebookComponents/components/contacts/ContactList.styled.js","components/phonebookComponents/components/contacts/ContactList.jsx","components/phonebookComponents/PhoneBook.styled.js","components/phonebookComponents/PhoneBook.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Name = styled.label`\n// margin-left: 20px;\n`;\n\nexport const Input = styled.input`\nmargin-left: 20px;\nborder-radius: 5px;\n\n`;","import styled from \"@emotion/styled\";\n\nexport const PhoneBook = styled.form`\ndisplay: flex;\nflex-direction: column;\n// width: 350px;\n// margin-left: 20px;\n`;\n\nexport const Label = styled.label`\n\n`;\n\n// export const Input = styled.input`\n// margin-bottom: 20px;\n// `;\n\nexport const Button = styled.button`\nbackground: grey;\nborder: none;\nborder-radius:5px;\n// margin-left: 20px;\nmargin-top: 20px;\nwidth: 100%;\npadding: 5px;\n`;","import React from 'react';\nimport { Input } from '../filter/FilterField.styled';\nimport { Button, PhoneBook } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, updateContact } from '../../../Redux/query';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const submitForm = e => {\n    e.preventDefault();\n    const newContact = {\n      name: e.target.name.value,\n      number: e.target.number.value,\n    };\n    if (\n      contacts.find(\n        contact =>\n          contact.name === newContact.name &&\n          contact.number === newContact.number\n      )\n    ) {\n      alert('You have this contact already');\n      return e.currentTarget.reset();\n    }\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      newContact.id = contacts.find(\n        contact => contact.name === newContact.name\n      ).id;\n      dispatch(updateContact(newContact));\n      alert('You just changed this contact');\n      return e.currentTarget.reset();\n    }\n    dispatch(addContact(newContact));\n    e.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <PhoneBook action=\"\" onSubmit={submitForm}>\n        <label htmlFor=\"name\">Name</label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"number\">Number</label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button type=\"submit\">Add/update contact</Button>\n      </PhoneBook>\n    </>\n  );\n};\n","import React from 'react';\nimport { Input, Name } from './FilterField.styled';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../../Redux/slice';\n\nexport const FilterField = () => {\n  const searchValue = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n  const searchFunc = e =>\n    dispatch(filterContacts(e.target.value.toLowerCase()));\n\n  return (\n    <>\n      <Name htmlFor=\"search\">Find contacts by name</Name>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onInput={searchFunc}\n        value={searchValue}\n      />\n    </>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Delete = styled.button`\nbackground: grey;\nborder: none;\nborder-radius:50%;\nmargin-right: 10px;\nwidth:20px;\nheight:20px;\ncursor:pointer;\n`;\n\nexport const Card = styled.div`\n// list-style:none;\nmargin-bottom:10px;\n`;\n\nexport const Name = styled.span`\npadding:0;\nmargin:0;\n`;\n\nexport const Tel = styled.span`\npadding:0;\nmargin:0;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Delete, Card, Name, Tel } from './ContactEl.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../Redux/query';\n\nexport default function ContactEl({ contact }) {\n  const dispatch = useDispatch();\n\n  const delFunc = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <Card>\n      <Delete type=\"button\" onClick={delFunc}>\n        X\n      </Delete>\n      <Name>{contact.name}:</Name>\n      <Tel> {contact.number}</Tel>\n    </Card>\n  );\n}\n\nContactEl.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Element = styled.li`\nlist-style: none;\n`;\n\nexport const List = styled.ul`\n\n`;","import React, { useEffect } from 'react';\nimport ContactEl from './ContactEl';\nimport { Element, List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../../Redux/query';\n\nexport default function ContactList() {\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const filter = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <p>Is Loading</p>}\n      <List>\n        {contacts\n          .filter(contact => {\n            return contact.name.toLowerCase().includes(filter);\n          })\n          .map(contact => {\n            return (\n              <Element key={contact.id}>\n                <ContactEl contact={contact} />\n              </Element>\n            );\n          })}\n      </List>\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h2`\n// margin-left: 20px;\n`;\n\nexport const Container = styled.div`\noutline: 1px solid black;\n// display:flex;\n// justify-content:center;\nmargin: 10px;\npadding: 10px;\nwidth: 100%;\nmax-width: 400px;\n`;","import React from 'react';\nimport { Form } from './components/form/Form';\nimport { FilterField } from './components/filter/FilterField';\nimport ContactList from './components/contacts/ContactList';\nimport { Container, Header } from './PhoneBook.styled';\n\nexport const Phonebook = () => {\n  return (\n    <Container>\n      <Header>PhoneBook</Header>\n      <Form />\n\n      <Header>Contacts</Header>\n      <FilterField />\n\n      <ContactList />\n    </Container>\n  );\n};\n","import { Phonebook } from \"components/phonebookComponents/PhoneBook\";\n\nconst PhonebookPage = () => {\n    return (\n        <div><Phonebook/></div>\n    )\n};\n\nexport default PhonebookPage;"],"names":["Name","styled","Input","PhoneBook","Button","Form","dispatch","useDispatch","contacts","useSelector","state","items","action","onSubmit","e","preventDefault","newContact","name","target","value","number","find","contact","alert","currentTarget","reset","id","updateContact","addContact","htmlFor","type","pattern","title","required","FilterField","searchValue","filter","onInput","filterContacts","toLowerCase","Delete","Card","Tel","ContactEl","onClick","deleteContact","Element","List","ContactList","isLoading","useEffect","getContacts","includes","map","Header","Container","Phonebook"],"sourceRoot":""}